import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import {
  ClerkProvider,
  SignedIn,
  SignedOut,
  SignInButton,
  SignUpButton,
  UserButton,
} from "@clerk/nextjs";
import "./globals.css";
import { ThemeProvider } from "@/components/theme-provider";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "CHAT with PDF",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} font-sans antialiased`}
        suppressHydrationWarning
      >
        <ClerkProvider>
          <ThemeProvider
            attribute="class"
            defaultTheme="dark"
            enableSystem={false}
            disableTransitionOnChange
            forcedTheme="dark"
          >
            <main className="min-h-screen bg-background">
              <SignedOut>
                <div className="h-screen w-screen flex items-center justify-center bg-slate-900">
                  <div className="text-center space-y-4">
                    <h1 className="text-4xl font-bold text-white mb-8">
                      Welcome to Chat with PDF
                    </h1>
                    <div className="flex flex-col gap-4 items-center">
                      <SignInButton mode="modal">
                        <button className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">
                          Sign In
                        </button>
                      </SignInButton>
                      <SignUpButton mode="modal">
                        <button className="px-4 py-2 bg-slate-700 text-white rounded-lg hover:bg-slate-600 transition-colors">
                          Sign Up
                        </button>
                      </SignUpButton>
                    </div>
                  </div>
                </div>
              </SignedOut>
              <SignedIn>
                <div className="relative">
                  <div className="absolute top-4 right-4 z-50">
                    <UserButton
                      afterSignOutUrl="/"
                      appearance={{
                        elements: {
                          avatarBox: "w-10 h-10",
                          userButtonPopoverCard:
                            "bg-slate-900 border border-slate-700",
                          userButtonPopoverActionButton:
                            "text-slate-200 hover:bg-slate-800",
                          userButtonPopoverFooter: "border-t border-slate-700",
                        },
                      }}
                    />
                  </div>
                  {children}
                </div>
              </SignedIn>
            </main>
          </ThemeProvider>
        </ClerkProvider>
      </body>
    </html>
  );
}
